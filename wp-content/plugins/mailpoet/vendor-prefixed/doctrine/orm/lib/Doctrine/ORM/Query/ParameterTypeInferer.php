<?php
 namespace MailPoetVendor\Doctrine\ORM\Query; if (!defined('ABSPATH')) exit; use DateInterval; use DateTimeImmutable; use DateTimeInterface; use MailPoetVendor\Doctrine\DBAL\Connection; use MailPoetVendor\Doctrine\DBAL\Types\Type; use PDO; use function current; use function is_array; use function is_bool; use function is_int; class ParameterTypeInferer { public static function inferType($value) { if (is_int($value)) { return Type::INTEGER; } if (is_bool($value)) { return Type::BOOLEAN; } if ($value instanceof DateTimeImmutable) { return Type::DATETIME_IMMUTABLE; } if ($value instanceof DateTimeInterface) { return Type::DATETIME; } if ($value instanceof DateInterval) { return Type::DATEINTERVAL; } if (is_array($value)) { return is_int(current($value)) ? Connection::PARAM_INT_ARRAY : Connection::PARAM_STR_ARRAY; } return PDO::PARAM_STR; } } 