<?php
 namespace MailPoetVendor\Symfony\Component\DependencyInjection\Compiler; if (!defined('ABSPATH')) exit; use MailPoetVendor\Symfony\Component\DependencyInjection\Definition; class ResolveEnvPlaceholdersPass extends AbstractRecursivePass { protected function processValue($value, $isRoot = \false) { if (\is_string($value)) { return $this->container->resolveEnvPlaceholders($value, \true); } if ($value instanceof Definition) { $changes = $value->getChanges(); if (isset($changes['class'])) { $value->setClass($this->container->resolveEnvPlaceholders($value->getClass(), \true)); } if (isset($changes['file'])) { $value->setFile($this->container->resolveEnvPlaceholders($value->getFile(), \true)); } } $value = parent::processValue($value, $isRoot); if ($value && \is_array($value) && !$isRoot) { $value = \array_combine($this->container->resolveEnvPlaceholders(\array_keys($value), \true), $value); } return $value; } } 